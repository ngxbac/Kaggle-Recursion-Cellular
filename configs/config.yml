model_params:
  model: cell_senet
  n_channels: 5
  num_classes: 1108
  model_name: "se_resnext50_32x4d"
#  pretrained: "/raid/bac/pretrained_models/pytorch/fishnet150_ckpt.tar"

args:
  expdir: "src"
  logdir: &logdir "./logs/cell"
  baselogdir: "./logs/cell"

distributed_params:
  opt_level: O1

stages:

  state_params:
    main_metric: &reduce_metric accuracy01
    minimize_metric: False

  criterion_params:
    criterion: CrossEntropyLoss
#    criterion: LabelSmoothingCrossEntropy

  data_params:
    batch_size: 64
    num_workers: 8
    drop_last: False
    # drop_last: True

    image_size: &image_size 512
    train_csv: "./csv/kfold5/train_0.csv"
    valid_csv: "./csv/kfold5/valid_0.csv"
    root: "/raid/data/kaggle/recursion-cellular-image-classification/"
    sites: [1]
    channels: [1, 2, 3, 4, 5]

  stage0:

    optimizer_params:
      optimizer: SGD
      lr: 0.01

    scheduler_params:
      scheduler: MultiStepLR
      milestones: [10]
      gamma: 0.3

    state_params:
      num_epochs: 2

    callbacks_params:
      loss:
        callback: CriterionCallback
#        callback: LabelSmoothCriterionCallback
      optimizer:
        callback: OptimizerCallback
        accumulation_steps: 4
      accuracy:
        callback: AccuracyCallback
        accuracy_args: [1]
      scheduler:
        callback: SchedulerCallback
        reduce_metric: *reduce_metric
      saver:
        callback: CheckpointCallback
      slack:
        callback: SlackLogger
        channel: logs_cell
        url: "https://hooks.slack.com/services/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"

  stage1:

    optimizer_params:
      optimizer: SGD
      lr: 0.01

    scheduler_params:
      scheduler: CyclicLRFix
      base_lr: 0.01
      max_lr: 0.03
      step_size_up: 250
      step_size_down: 300
      mode: "exp_range"
#      cycle_momentum: False

    state_params:
      num_epochs: 30

    callbacks_params: &callback_params
      loss:
        callback: CriterionCallback
      optimizer:
        callback: OptimizerCallback
        accumulation_steps: 2
      accuracy:
        callback: AccuracyCallback
        accuracy_args: [1]
      scheduler:
        callback: SchedulerCallback
        reduce_metric: *reduce_metric
        mode: "batch"
      saver:
        callback: CheckpointCallback
      slack:
        callback: SlackLogger
        channel: logs_cell
        url: "https://hooks.slack.com/services/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"

  stage2:

    optimizer_params:
      optimizer: SGD
      lr: 0.002

    scheduler_params:
      scheduler: CyclicLRFix
      base_lr: 0.002
      max_lr: 0.005
      step_size_up: 200
      step_size_down: 258
      mode: "exp_range"
    #      cycle_momentum: False

    state_params:
      num_epochs: 10

    callbacks_params: *callback_params


  stage3:

    optimizer_params:
      optimizer: SGD
      lr: 0.0004

    scheduler_params:
      scheduler: CyclicLRFix
      base_lr: 0.0004
      max_lr: 0.0008
      step_size_up: 200
      step_size_down: 258
      mode: "exp_range"
    #      cycle_momentum: False

    state_params:
      num_epochs: 10

    callbacks_params: *callback_params